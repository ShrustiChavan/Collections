1.package Collections;

import java.util.*;

public class TreeMapTest {
public static void main(String[] args) {
	
	
	Long p=Long.valueOf("7702101116");
    Long q=Long.valueOf("7093312958");
    Long r=Long.valueOf("9010205125");
    Long s=Long.valueOf("9849983259");
	Contact c1 = new Contact("abc","abc@gmail.com",Gender.male);
	Contact c2 = new Contact("pqr","pqr@gmail.com",Gender.female);
	Contact c3 = new Contact("efg","efg@gmail.com",Gender.male);
	Contact c4 = new Contact("stu","stu@gmail.com",Gender.female);
	
	
	TreeMap<Long , Contact> map = new TreeMap<>();


	map.put(p, c1);
	map.put(q, c2);
	map.put(r, c3);
	map.put(s, c4);
	
	 Set<Map.Entry<Long,Contact> > entrySet = map.entrySet();
	 for (Map.Entry<Long,Contact> entry : entrySet)    
	 {
		 
		 System.out.println(entry.getKey());
		 System.out.println(entry.getValue());
		 System.out.println("Key:Value [" + entry.getKey() + " , " + entry.getValue() + "]");
	 }  
}
}

enum Gender
{
	male,female;
}
class Contact implements Comparable<Contact>
{
	private String name;
	private String email;
	private Gender gender;
	private Long number;
	public Contact(String name, String email, Gender gender) {
		super();
		this.name = name;
		this.email = email;
		this.gender = gender;
		
	}
	public String getName() {
		return name;
	}
	
	public String getEmail() {
		return email;
	}
	
	public Gender getGender() {
		return gender;
	}

	public Long getNumber() {
		return number;
	}
	@Override
	public int compareTo(Contact o) {
		// TODO Auto-generated method stub
		return o.getNumber().compareTo(this.getNumber());
	}
	
	public String toString() {
		return "Contact [" +name+ "," +email+ "," +gender+ "," +number+ "]";
		
	}
	
	
}

2.package Collections;
import java.util.*;
public class HashSet3 {

      public static void main(String[] args) {
		
    	  product p1 = new product("abc");
    	  product p2 = new product("pqr");
    	  product p3 = new product("mno");
    	  
    	  HashSet<product> h = new HashSet<>();
    	  h.add(p1);
    	  h.add(p2);
    	  h.add(p3);
    
    	  Iterator<product> i = h.iterator();
    	  while (i.hasNext())
    		  System.out.println(i.next());
    	  
    	   h.add(p3);  
    		  System.out.println("already added, duplicates will not be added");	  
	}		
}
class product
{
	private String product_name;
	public product(String product_name) {
		super();
		this.product_name = product_name;
	}
	public String getProduct_name() {
		return product_name;
	}
	@Override
	public String toString() {
		return " [product_name = " + product_name + "]";
	}
}


3. import java.util.Set;
	import java.util.*;

	
	public class Ready {
		public static void main(String[] args) {
			
			TreeSet<Employee> treeSet = new TreeSet<Employee>();
			
			Employee emp1 = new Employee(1,"xyz",10,2000.0);
			Employee emp2 = new Employee(2,"abc",20,4000.0);
			Employee emp3 = new Employee(1,"uyz",30,6000.0);
			treeSet.add(emp1);
			treeSet.add(emp2);
			treeSet.add(emp3);
			
			for(Employee employee : treeSet)
			{
				System.out.println("Employee Name:" + employee.getName());
				System.out.println("Employee Id:" + employee.getName());
				System.out.println("Employee Age:" + employee.getName());
				System.out.println("Employee Salary:" + employee.getName());
				
			}
			

		}

	}

//class 1
public class Employee implements Comparable<Object> {
    private int id;
    private String name; 
    private int dept;
    private double salary;
	public Employee(int id, String name, int dept, double salary) {
		super();
		this.id = id;
		this.name = name;
		this.dept = dept;
		this.salary = salary;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getDept() {
		return dept;
	}
	public void setDept(int dept) {
		this.dept = dept;
	}
	public double getSalary() {
		return salary;
	}
	public void setSalary(double salary) {
		this.salary = salary;
	}
	@Override
	public int compareTo(Object object) {
		Employee employee =(Employee) object;
		System.out.println("this.getName()=" + this.getName()+ ",employee.getName()=" + employee.getName()+ "\n");
		return employee.getName().compareTo(this.getName());
	}
	
}

4.package Generics;


		import java.time.LocalDate;
		import java.time.Month;
		import java.util.LinkedList;
		import java.util.List;

		public class Program4{

			public static void main(String[] args) {
				List<LocalDate> ll=new LinkedList<>();
				ll.add(LocalDate.of(2000,12,23));
				ll.add(LocalDate.of(2004,06,29));
				ll.add(LocalDate.of(2001,08,10));
				ll.add(LocalDate.of(2000,04,28));
				ll.add(LocalDate.of(2003,05,12));
				ll.add(LocalDate.of(2005,12,21));
				ll.add(LocalDate.of(2006,9,30));
				ll.add(LocalDate.of(2008,03,31));
				ll.add(LocalDate.of(2009,07,20));
				ll.add(LocalDate.of(2004,11,8));
				
				for(LocalDate ld: ll)
				{
					if(ld.isLeapYear())
					{
						System.out.println("Your date of birth is "+ld+" and it was leap year");
					}
					else
					{
						System.out.println("Your date of birth is "+ld+" and it was not leap year");
					}
				}
			}

		}	